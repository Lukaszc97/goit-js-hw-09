{"mappings":"AAAA,MAAMA,EAAiBC,SAASC,cAAc,oBACxCC,EAAcF,SAASC,cAAc,gBACrCE,EAAYH,SAASC,cAAc,eACnCG,EAAaJ,SAASC,cAAc,gBACpCI,EAAeL,SAASC,cAAc,kBACtCK,EAAeN,SAASC,cAAc,kBAE5C,IAAIM,EAmDJ,SAASC,EAAUC,GAEjB,MACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAWZ,MAAO,C,KARME,KAAKC,MAAMN,EAAKI,G,MAEfC,KAAKC,MAAMN,EAAMI,EAAOD,G,QAEtBE,KAAKC,MAAMN,EAAOI,EAAOD,EAAQF,G,QAEjCI,KAAKC,MAAMN,EAAQI,EAAOD,EAAQF,EAZnC,K,CApDjBM,UAAU,mBAAoB,CAC1BC,YAAY,EACZC,QAAS,QACTC,WAAY,cAEhBjB,EAAYkB,iBAAiB,SAAS,KACpC,MAAMC,EAAetB,EAAeuB,WAAWC,cAAc,GAG7D,IAAKF,EAEH,YADAG,OAAOC,MAAM,+BAKf,GAAIJ,EAAaK,WAAaC,KAAKC,MAEjC,YADAJ,OAAOC,MAAM,uCAKfvB,EAAY2B,UAAW,EAGxB,IAAIC,EAAgBT,EAAaK,UAAYC,KAAKC,MAEjDrB,EAAoBwB,aAAY,KAC9B,MAAMC,EAAOlB,KAAKC,MAAMe,EAAiB,OACnCG,EAAQnB,KAAKC,MACjBe,EAAkB,MAAyB,MAEvCI,EAAUpB,KAAKC,MACnBe,EAAkB,KAAoB,KAElCK,EAAUrB,KAAKC,MAAMe,EAAkB,IAAc,KAE3D3B,EAAUiC,YAAcJ,EAAKK,WAAWC,SAAS,EAAG,KACpDlC,EAAWgC,YAAcH,EAAMI,WAAWC,SAAS,EAAG,KACtDjC,EAAa+B,YAAcF,EAAQG,WAAWC,SAAS,EAAG,KAC1DhC,EAAa8B,YAAcD,EAAQE,WAAWC,SAAS,EAAG,KAEtDR,GAAiB,GACnBS,cAAchC,GACdL,EAAY2B,UAAW,GAEvBC,GAAiB,GAAI,GAEtB,IAAK,IAsBVU,QAAQC,IAAIjC,EAAU,MACtBgC,QAAQC,IAAIjC,EAAU,OACtBgC,QAAQC,IAAIjC,EAAU","sources":["src/js/02-timer.js"],"sourcesContent":["const dateTimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\n\nlet countdownInterval;\nflatpickr(\"#datetime-picker\", {\n    enableTime: true,\n    minDate: \"today\",\n    dateFormat: \"Y-m-d H:i\",\n  });\nstartButton.addEventListener('click', () => {\n  const selectedDate = dateTimePicker._flatpickr.selectedDates[0];\n\n  \n  if (!selectedDate) {\n    window.alert('Please choose a date first.');\n    return;\n  }\n\n\n  if (selectedDate.getTime() <= Date.now()) {\n    window.alert('Please choose a date in the future.');\n    return;\n  }\n\n  \n  startButton.disabled = true;\n\n  \n let remainingTime = selectedDate.getTime() - Date.now();\n\n  countdownInterval = setInterval(() => {\n    const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(\n      (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    );\n    const minutes = Math.floor(\n      (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\n    );\n    const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\n\n    daysValue.textContent = days.toString().padStart(2, '0');\n    hoursValue.textContent = hours.toString().padStart(2, '0');\n    minutesValue.textContent = minutes.toString().padStart(2, '0');\n    secondsValue.textContent = seconds.toString().padStart(2, '0');\n\n    if (remainingTime <= 0) {\n      clearInterval(countdownInterval);\n      startButton.disabled = false;\n    } else {\n      remainingTime -= 1000;\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n \n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["$40d383fb392a7037$var$dateTimePicker","document","querySelector","$40d383fb392a7037$var$startButton","$40d383fb392a7037$var$daysValue","$40d383fb392a7037$var$hoursValue","$40d383fb392a7037$var$minutesValue","$40d383fb392a7037$var$secondsValue","$40d383fb392a7037$var$countdownInterval","$40d383fb392a7037$var$convertMs","ms","minute","second","hour","day","Math","floor","flatpickr","enableTime","minDate","dateFormat","addEventListener","selectedDate","_flatpickr","selectedDates","window","alert","getTime","Date","now","disabled","remainingTime","setInterval","days","hours","minutes","seconds","textContent","toString","padStart","clearInterval","console","log"],"version":3,"file":"02-timer.9b1f90b0.js.map"}