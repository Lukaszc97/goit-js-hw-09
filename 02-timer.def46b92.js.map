{"mappings":"YAAA,IAOIA,EAPEC,EAAiBC,SAASC,cAAc,oBACxCC,EAAcF,SAASC,cAAc,gBACrCE,EAAYH,SAASC,cAAc,eACnCG,EAAaJ,SAASC,cAAc,gBACpCI,EAAeL,SAASC,cAAc,kBACtCK,EAAeN,SAASC,cAAc,kBAqD5C,SAASM,EAAUC,GAEjB,IACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAWZ,MAAO,CAAEE,KARIC,KAAKC,MAAMP,EAAKI,GAQdI,MANDF,KAAKC,MAAMP,EAAMI,EAAOD,GAMhBM,QAJNH,KAAKC,MAAMP,EAAOI,EAAOD,EAAQF,GAIlBS,QAFfJ,KAAKC,MAAMP,EAAQI,EAAOD,EAAQF,EAZnC,K,CApDjBU,UAAU,mBAAoB,CAC1BC,YAAY,EACZC,QAAS,QACTC,WAAY,cAEhBpB,EAAYqB,iBAAiB,SAAS,WACpC,IAAMC,EAAezB,EAAe0B,WAAWC,cAAc,GAG7D,GAAKF,EAML,GAAIA,EAAaG,WAAaC,KAAKC,MACjCC,OAAOC,MAAM,2CADf,CAMA7B,EAAY8B,UAAW,EAGxB,IAAIC,EAAgBT,EAAaG,UAAYC,KAAKC,MAEjD/B,EAAoBoC,aAAY,WAC9B,IAAMrB,EAAOC,KAAKC,MAAMkB,EAAiB,OACnCjB,EAAQF,KAAKC,MACjBkB,EAAkB,MAAyB,MAEvChB,EAAUH,KAAKC,MACnBkB,EAAkB,KAAoB,KAElCf,EAAUJ,KAAKC,MAAMkB,EAAkB,IAAc,KAE3D9B,EAAUgC,YAActB,EAAKuB,WAAWC,SAAS,EAAG,KACpDjC,EAAW+B,YAAcnB,EAAMoB,WAAWC,SAAS,EAAG,KACtDhC,EAAa8B,YAAclB,EAAQmB,WAAWC,SAAS,EAAG,KAC1D/B,EAAa6B,YAAcjB,EAAQkB,WAAWC,SAAS,EAAG,KAEtDJ,GAAiB,GACnBK,cAAcxC,GACdI,EAAY8B,UAAW,GAEvBC,GAAiB,G,GAElB,I,MArCDH,OAAOC,MAAM,8B,IA2DjBQ,QAAQC,IAAIjC,EAAU,MACtBgC,QAAQC,IAAIjC,EAAU,OACtBgC,QAAQC,IAAIjC,EAAU,Q","sources":["src/js/02-timer.js"],"sourcesContent":["const dateTimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\n\nlet countdownInterval;\nflatpickr(\"#datetime-picker\", {\n    enableTime: true,\n    minDate: \"today\",\n    dateFormat: \"Y-m-d H:i\",\n  });\nstartButton.addEventListener('click', () => {\n  const selectedDate = dateTimePicker._flatpickr.selectedDates[0];\n\n  \n  if (!selectedDate) {\n    window.alert('Please choose a date first.');\n    return;\n  }\n\n\n  if (selectedDate.getTime() <= Date.now()) {\n    window.alert('Please choose a date in the future.');\n    return;\n  }\n\n  \n  startButton.disabled = true;\n\n  \n let remainingTime = selectedDate.getTime() - Date.now();\n\n  countdownInterval = setInterval(() => {\n    const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(\n      (remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    );\n    const minutes = Math.floor(\n      (remainingTime % (1000 * 60 * 60)) / (1000 * 60)\n    );\n    const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\n\n    daysValue.textContent = days.toString().padStart(2, '0');\n    hoursValue.textContent = hours.toString().padStart(2, '0');\n    minutesValue.textContent = minutes.toString().padStart(2, '0');\n    secondsValue.textContent = seconds.toString().padStart(2, '0');\n\n    if (remainingTime <= 0) {\n      clearInterval(countdownInterval);\n      startButton.disabled = false;\n    } else {\n      remainingTime -= 1000;\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n \n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["$84b9dae4df53835d$var$countdownInterval","$84b9dae4df53835d$var$dateTimePicker","document","querySelector","$84b9dae4df53835d$var$startButton","$84b9dae4df53835d$var$daysValue","$84b9dae4df53835d$var$hoursValue","$84b9dae4df53835d$var$minutesValue","$84b9dae4df53835d$var$secondsValue","$84b9dae4df53835d$var$convertMs","ms","minute","second","hour","day","days","Math","floor","hours","minutes","seconds","flatpickr","enableTime","minDate","dateFormat","addEventListener","selectedDate","_flatpickr","selectedDates","getTime","Date","now","window","alert","disabled","remainingTime","setInterval","textContent","toString","padStart","clearInterval","console","log"],"version":3,"file":"02-timer.def46b92.js.map"}